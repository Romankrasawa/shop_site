# Generated by Django 4.1.4 on 2023-01-07 19:34

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Headphones',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('headphones_type', models.CharField(choices=[('Vacum', 'Вакумні'), ('Tabs', 'Вкладки'), ('TWS', 'TWS'), ('Loaded', 'Накладні'), ('Fullsized', 'Повнорозмірні')], max_length=30, verbose_name='Тип навушниів')),
                ('connection_type', models.CharField(choices=[('Wireless', 'Безпровідний'), ('Leading', 'Провідний'), ('Combinated', 'Комбінований')], max_length=30, verbose_name='Тип навушниів')),
                ('charging_time', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Час заряджання')),
                ('work_time', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Час роботи')),
                ('work_radius', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Радіус дії')),
                ('cabel_lenght', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Довжина кабелю')),
                ('impedance', models.PositiveIntegerField(verbose_name='Імпеданс')),
                ('noise_reduction', models.BooleanField(verbose_name='Шумозаглюшення')),
                ('microphone', models.BooleanField(verbose_name='Мікрофон')),
                ('microphone_num', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кількість мікрофонів')),
                ('microphone_sensivity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Чутливість мікрофону')),
                ('codec_support', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Підтримка кодеків')),
                ('connectors_ports', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Розєми та порти')),
                ('colour', models.CharField(choices=[('WHITE', 'Білий'), ('BLACK', 'Чорний'), ('RED', 'Червоний'), ('BLUE', 'Синій'), ('PINK', 'Рожевий'), ('SILVER', 'Сріблястий'), ('VIOLET', 'Фіолетовий'), ('GRAY', 'Сірий'), ('GOLD', 'Золотий'), ('BROWN', 'Коричневий'), ('GREEN', 'Зелений'), ('ORANGE', 'Оранжений'), ('PAINTING', 'Малюнок')], max_length=8, verbose_name='Колір')),
                ('material', models.CharField(choices=[('Metal', 'Метал'), ('Plastic', 'Пластик'), ('Glass', 'Скло'), ('Other', 'Інше')], max_length=15, verbose_name='Матеріал')),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Вага')),
            ],
            options={
                'verbose_name': 'Монітор',
                'verbose_name_plural': 'Монітори',
            },
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('screen_diagonal', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Діагональ екрану')),
                ('screen_type', models.CharField(choices=[('IPS', 'IPS'), ('OLED', 'OLED'), ('TN', 'TN'), ('RETINA', 'Retina'), ('VA', 'VA'), ('IGZO', 'IGZO'), ('LTPS', 'LTPS'), ('Liquid_Retina', 'Liquid Retina'), ('Liquid_Retina_XDR', 'Liquid Retina XDR')], max_length=30, verbose_name='Тип екрану')),
                ('screen_refresh_rate', models.PositiveIntegerField(verbose_name='Частота оновлення екрану')),
                ('resolution', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Розширення екрану повинно бути такого типу: 1920x1080', regex='\\d+x\\d+')], verbose_name='Роздільна здатність')),
                ('brightness', models.PositiveIntegerField(validators=[django.core.validators.RegexValidator(message='Яскравість дисплею повинна бути такого типу: 2500:1', regex='\\d+:\\d+')], verbose_name='Яскравість дисплею')),
                ('horizontal_angle', models.PositiveIntegerField(verbose_name='Кут огляду горизонтальний')),
                ('vertical_angle', models.PositiveIntegerField(verbose_name='Кут огляду вертикальний')),
                ('reaction_time', models.PositiveIntegerField(verbose_name='Час реакції матриці')),
                ('relationship_of_parties', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='Відношення сторін повинно бути такого типу: 16:9', regex='\\d+:\\d+')], verbose_name='Відношення сторін')),
                ('speacers', models.BooleanField(verbose_name='Вбудовані колонки')),
                ('web_camera', models.BooleanField(verbose_name='Камера')),
                ('energy_consumption', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Енергоспоживання')),
                ('connectors_ports', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Розєми та порти')),
                ('colour', models.CharField(choices=[('WHITE', 'Білий'), ('BLACK', 'Чорний'), ('RED', 'Червоний'), ('BLUE', 'Синій'), ('PINK', 'Рожевий'), ('SILVER', 'Сріблястий'), ('VIOLET', 'Фіолетовий'), ('GRAY', 'Сірий'), ('GOLD', 'Золотий'), ('BROWN', 'Коричневий'), ('GREEN', 'Зелений'), ('ORANGE', 'Оранжений'), ('PAINTING', 'Малюнок')], max_length=8, verbose_name='Колір')),
                ('material', models.CharField(choices=[('Metal', 'Метал'), ('Plastic', 'Пластик'), ('Glass', 'Скло'), ('Other', 'Інше')], max_length=15, verbose_name='Матеріал')),
                ('width', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Ширина')),
                ('height', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Висота')),
                ('lenght', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Довжина')),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Вага')),
            ],
            options={
                'verbose_name': 'Монітор',
                'verbose_name_plural': 'Монітори',
            },
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('screen_diagonal', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Діагональ екрану')),
                ('screen_type', models.CharField(choices=[('IPS', 'IPS'), ('OLED', 'OLED'), ('TN', 'TN'), ('RETINA', 'Retina'), ('VA', 'VA'), ('IGZO', 'IGZO'), ('LTPS', 'LTPS'), ('Liquid_Retina', 'Liquid Retina'), ('Liquid_Retina_XDR', 'Liquid Retina XDR')], max_length=30, verbose_name='Тип екрану')),
                ('screen_refresh_rate', models.PositiveIntegerField(verbose_name='Частота оновлення екрану')),
                ('resolution', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Розширення екрану повинно бути такого типу: 1920x1080', regex='\\d+x\\d+')], verbose_name='Роздільна здатність')),
                ('videocore', models.CharField(max_length=50, verbose_name='Процессор зображення')),
                ('RAM_size', models.PositiveIntegerField(verbose_name='Кількість оперативної памяті')),
                ('storage', models.PositiveIntegerField(verbose_name='Кількість вбудованої памяті')),
                ('OS', models.CharField(choices=[('IOS', 'IOS'), ('Android_4', 'Android 4'), ('Android_5', 'Android 5'), ('Android_6', 'Android 6'), ('Android_7', 'Android 7'), ('Android_8', 'Android 8'), ('Android_9', 'Android 9'), ('Android_10', 'Android 10'), ('Android_11', 'Android 11'), ('Android_12', 'Android 12'), ('Android_13', 'Android 13'), ('Windows_Mobile', 'Windows Mobile'), ('Other', 'Інше')], max_length=14, verbose_name='Операційна система')),
                ('wifi_adapter', models.BooleanField(verbose_name='Wifi адаптер')),
                ('bluetooth_adpter', models.BooleanField(verbose_name='Bluetooth адаптер')),
                ('web_camera', models.BooleanField(verbose_name='Камера')),
                ('smart_tv', models.BooleanField(verbose_name='Smart TV')),
                ('sound_control', models.BooleanField(verbose_name='Управління голосом')),
                ('phone_control', models.BooleanField(verbose_name='Управління телефоном')),
                ('energy_consumption', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Енергоспоживання')),
                ('connectors_ports', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Розєми та порти')),
                ('tuner_diapazon', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Діапазони цифрового тюнера')),
                ('colour', models.CharField(choices=[('WHITE', 'Білий'), ('BLACK', 'Чорний'), ('RED', 'Червоний'), ('BLUE', 'Синій'), ('PINK', 'Рожевий'), ('SILVER', 'Сріблястий'), ('VIOLET', 'Фіолетовий'), ('GRAY', 'Сірий'), ('GOLD', 'Золотий'), ('BROWN', 'Коричневий'), ('GREEN', 'Зелений'), ('ORANGE', 'Оранжений'), ('PAINTING', 'Малюнок')], max_length=8, verbose_name='Колір')),
                ('material', models.CharField(choices=[('Metal', 'Метал'), ('Plastic', 'Пластик'), ('Glass', 'Скло'), ('Other', 'Інше')], max_length=15, verbose_name='Матеріал')),
                ('width', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Ширина')),
                ('height', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Висота')),
                ('lenght', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Довжина')),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Вага')),
            ],
            options={
                'verbose_name': 'Телевізор',
                'verbose_name_plural': 'Телевізори',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='additional_characteristics',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=20, verbose_name='Додаткові характеристики'),
        ),
        migrations.AddField(
            model_name='product',
            name='release_year',
            field=models.PositiveIntegerField(default=2000, verbose_name='Рік випуску моделі'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='laptop',
            name='connectors_ports',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Розєми та порти'),
        ),
        migrations.AlterField(
            model_name='pc',
            name='connectors_ports',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Розєми та порти'),
        ),
        migrations.AlterField(
            model_name='phone',
            name='camera_features',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=20, verbose_name='Особливосві камери'),
        ),
        migrations.AlterField(
            model_name='phone',
            name='connectors_ports',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Розєми та порти'),
        ),
        migrations.AlterField(
            model_name='product',
            name='complect',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=20, verbose_name='Комплектація'),
        ),
        migrations.AlterField(
            model_name='product',
            name='producing_country',
            field=models.CharField(max_length=50, verbose_name='Країна виробник'),
        ),
        migrations.AlterField(
            model_name='tablet',
            name='camera_features',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=20, verbose_name='Особливосві камери'),
        ),
        migrations.AlterField(
            model_name='tablet',
            name='connectors_ports',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=20, verbose_name='Розєми та порти'),
        ),
    ]
